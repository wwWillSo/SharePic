<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
 	    http://www.springframework.org/schema/aop 
 	    http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
 	    http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache.xsd
        http://www.springframework.org/schema/tx
    	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
	<!-- 定义数据源Bean，使用C3P0数据源实现，并注入数据源的必要信息 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close"
		p:driverClass="com.microsoft.sqlserver.jdbc.SQLServerDriver"
		p:jdbcUrl="jdbc:sqlserver://localhost:1433;DatabaseName = instagram"
		p:user="WillSo"
		p:password="19941224"
		p:maxPoolSize="40"
		p:minPoolSize="2"
		p:initialPoolSize="2"
		p:maxIdleTime="30" />
		
	<!-- 定义Hibernate的SessionFactory，SessionFactory需要依赖数据源，注入dataSource -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource">
		<!-- annotationClasses用来列出全部持久化泪 -->
		<property name="annotatedClasses">
			<list>
				<!-- 一下用来列出所有的PO类 -->
				<value>szw.ins.model.User</value>
				<value>szw.ins.model.Picture</value>
				<value>szw.ins.model.Message</value>
				<value>szw.ins.model.Like</value>
				<value>szw.ins.model.Follow</value>
				<value>szw.ins.model.Comment</value>
			</list>
		</property>
		<!-- 定义hibernate SessionFactory的属性 -->
		<property name="hibernateProperties">
			<props>
				<!-- 制定Hibernate的链接方言 -->
				<prop key="hibernate.dialect">
					org.hibernate.dialect.SQLServer2012Dialect
				</prop>
				<!-- 是否根据hibernate映射创建数据表 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- Echo all executed SQL to stdout -->
      			 <prop key="show_sql">true</prop>
        
       			 <prop key="format_sql">true</prop>
			</props>
		</property>
	</bean>
	
	<!-- 定义事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="dataSource" />
	</bean>
	
	 <tx:annotation-driven transaction-manager="transactionManager"/>   
	
	<bean id="userDAO" class="szw.ins.dao.impl.UserDAOHibernate4" p:sessionFactory-ref="sessionFactory"/>
	<bean id="pictureDAO" class="szw.ins.dao.impl.PictureDAOHibernate4" p:sessionFactory-ref="sessionFactory"/>
	<bean id="MessageDAO" class="szw.ins.dao.impl.MessageDAOHibernate4" p:sessionFactory-ref="sessionFactory"/>
	<bean id="LikeDAO" class="szw.ins.dao.impl.LikeDAOHibernate4" p:sessionFactory-ref="sessionFactory"/>
	<bean id="FollowDAO" class="szw.ins.dao.impl.FollowDAOHibernate4" p:sessionFactory-ref="sessionFactory"/>
	<bean id="CommentDAO" class="szw.ins.dao.impl.CommentDAOHibernate4" p:sessionFactory-ref="sessionFactory"/>
	
	<bean id="user" class="szw.ins.model.User"/>
	<bean id="userService" class="szw.ins.service.impl.UserServiceImpl"/>
	
	<bean id="picture" class="szw.ins.model.Picture"/>
	<bean id="pictureService" class="szw.ins.service.impl.PictureServiceImpl"/>
	
	<bean id="like" class="szw.ins.model.Like"/>
	<bean id="likeService" class="szw.ins.service.impl.LikeServiceImpl"/>
	
	<bean id="comment" class="szw.ins.model.Comment"/>
	<bean id="commentService" class="szw.ins.service.impl.CommentServiceImpl"/>
	
	<context:component-scan base-package="szw.ins.controller">
        <context:exclude-filter type="annotation"
            expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation"
            expression="org.springframework.web.bind.annotation.ControllerAdvice"/>        
    </context:component-scan>
    
    <!-- 支持上传文件 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
	
</beans>